[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling", "uv-dynamic-versioning" ]

[project]
name = "gppt"
description = "Get your Pixiv token (for running upbit/pixivpy)"
readme = "README.md"
keywords = [
  "api",
  "pixiv",
  "token",
]
license = { text = "MIT" }
authors = [ { name = "eggplants", email = "w10776e8w@yahoo.co.jp" } ]
requires-python = ">=3.9,<4"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Typing :: Typed",
]
dynamic = [ "version" ]
dependencies = [
  "pixivpy3>=3.7.5,<4",
  "pwinput>=1.0.3,<2",
  "requests>=2.32.3,<3",
  "selenium>=4.27.1,<5",
]

urls.Repository = "https://github.com/eggplants/get-pixivpy-token"
scripts.gppt = "gppt.main:main"

[dependency-groups]
dev = [
  "mypy>=0.991,<1.15",
  "pre-commit>=2.20,<4",
  "pytest>=7.2.2,<9",
  "pytest-cov>=4,<6",
  "taskipy>=1.10.3,<2",
  "types-requests>=2.28.11.15,<3",
]
docs = [ "pdoc" ]

[tool.hatch.version]
# tool.hatch.version.source is not listed in official schema.
# https://github.com/ninoseki/uv-dynamic-versioning/issues/21
source = "uv-dynamic-versioning"

[tool.hatch.build.targets.sdist]
include = [ "gppt" ]

[tool.hatch.build.targets.wheel]
include = [ "gppt" ]

[tool.ruff]
line-length = 120
format.indent-style = "space"
format.quote-style = "double"
lint.select = [
  "ALL",
]

lint.per-file-ignores."gppt/auth.py" = [
  "T201", # `print` found
]
lint.per-file-ignores."gppt/main.py" = [
  "T201", # `print` found
  "T203", # `pprint` found
]
lint.per-file-ignores."tests/*.py" = [
  "D",
  "S101", # Use of `assert` detected
]
lint.pydocstyle.convention = "google"

[tool.mypy]
pretty = true
python_version = "3.8"
show_error_codes = true
strict = true

[tool.uv]
default-groups = [
  "dev",
  "docs",
]

[tool.uv-dynamic-versioning]
vcs = "git"
style = "semver"
fallback-version = "0.0.0"

[tool.taskipy.tasks]
test = "pytest --cov=gppt --cov-report=term"
"test:html" = "task test --cov-report=html && open htmlcov/index.html"
"test:ci" = "task test --cov-report=xml:cov.xml"
lint = "pre-commit run -a"
profile = "python -m cProfile"
gendoc = "pdoc gppt -o ./docs --docformat google"
